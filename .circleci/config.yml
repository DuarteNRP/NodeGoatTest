version: 2.1
commands:
  scan:
    description: |
      Start the scan on a target (website) using Probely.
    parameters:
      api_key:
        default: PROBELY_API_KEY
        description: |
          The Probely API key to use, defined in the PROBELY_API_KEY environment variable.
        type: env_var_name
      api_url:
        default: https://api.probely.com
        description: The URL of Probely's API
        type: string
      target_id:
        description: The id of the target (website) to scan.
        type: string
      user_data:
        description: Choose user_data to mark your scan.
        type: string
    steps:
    - run:
        command: |
          # Check if API key is set
          if [ -z "${<< parameters.api_key >>}" ]; then
            echo "NO PROBELY API KEY SET"
            echo "Please set your API key in the << parameters.api_key >> variable"
            exit 1
          fi
          # Check if target id is set
          if [ -z "<< parameters.target_id >>" ]; then
            echo "NO PROBELY TARGET ID SET"
            echo "Please set the target id as a parameter for this orb."
            exit 1
          fi
          # Check if user data is set
          if [ -z "<< parameters.user_data >>" ]; then
            echo "NO USER DATA SET"
            echo "Please set the user data as a parameter for this orb."
            exit 1
          fi
          echo "|"${CIRCLE_SHA1}"|"
          # Save the id of this scan
          my_id=$(curl << parameters.api_url >>/targets/<< parameters.target_id >>/scan_now/ \
            -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: JWT ${<< parameters.api_key >>}"| jq '.id' | tr -d '"')
          #Change user_data of this scan 
          curl << parameters.api_url >>/targets/<< parameters.target_id >>/scans/$my_id/ \
            -X PATCH -d '{"user_data":"<< parameters.user_data >>"}' \
            -H "Content-Type: application/json" \
            -H "Authorization: JWT ${<< parameters.api_key >>}"
          echo "|"${CIRCLE_SHA1}"|"
          exit $?
        name: Probely - Starting Security Scan
  vulnerabilities:
    description: |
      Get scan vulnerabilities.
    parameters:
      api_key:
        default: PROBELY_API_KEY
        description: |
          The Probely API key to use, defined in the PROBELY_API_KEY environment variable.
        type: env_var_name
      api_url:
        default: https://api.probely.com
        description: The URL of Probely's API
        type: string
      target_id:
        description: The id of the target (website) to scan.
        type: string
      user_data:
        description: The user_data of the scan that you chose previously.
        type: string
    steps:
    - run:
        name: Probely - Getting Security Scan Vulnerabilities
        command: |
          # Check if API key is set
          if [ -z "${<< parameters.api_key >>}" ]; then
            echo "NO PROBELY API KEY SET"
            echo "Please set your API key in the << parameters.api_key >> variable"
            exit 1
          fi
          # Check if target id is set
          if [ -z "<< parameters.target_id >>" ]; then
            echo "NO PROBELY TARGET ID SET"
            echo "Please set the target id as a parameter for this orb."
            exit 1
          fi
          # Check if user data is set
          if [ -z "<< parameters.user_data >>" ]; then
            echo "NO USER DATA SET"
            echo "Please set the user data as a parameter for this orb."
            exit 1
          fi
          echo "|"${CIRCLE_SHA1}"|"
          my_status="started"
          count=0;
          # For every minute verify if status changes
          while [ "$my_status" = started ]
          do
            if [ $count -eq 1440 ] # We will wait 1 day
              then
              echo "Took to much time!"
              exit 1
            fi
            sleep 60s
            # Get status and high vulnerabilities
            my_scan=$(curl << parameters.api_url >>/targets/<< parameters.target_id >>/scans/?search=<< parameters.user_data >> \
              -X GET \
              -H "Content-Type: application/json" \
              -H "Authorization: JWT ${<< parameters.api_key >>}"| jq '.results[0] | {status:.status,highs:.highs} ')
            my_highs=`echo $my_scan | jq '.highs' | tr -d '"'`
            my_status=`echo $my_scan | jq '.status' | tr -d '"'`
            if [ $my_highs -gt 0 ] #Search for high Vulnerabilities
              then
              echo "We found high vulnerabilities in your scan!"
              exit 1
            fi
            count=$((cout+1))
          done
          # If status is diffente from what we expected
          if [ "$my_status" != completed ]
            then
            echo "Something happened while your scan was not completed!"
            exit 1
          fi
          # Get all vulnerabilities
          my_vulnerabilities=$(curl << parameters.api_url >>/targets/<< parameters.target_id >>/scans/?search=<< parameters.user_data >> \
            -X GET \
            -H "Content-Type: application/json" \
            -H "Authorization: JWT ${<< parameters.api_key >>}"| jq '.results[0] | {lows:.lows,mediums:.mediums,highs:.highs}')
          echo Vulnerabilities of your scan = $my_vulnerabilities
          echo "|"${CIRCLE_SHA1}"|"
          exit $?
description: |
  Use Probely to scan your web application for security vulnerabilities.
  Full orb source code: https://github.com/Probely/probely-orb
display:
  home_url: https://probely.com/
  source_url: https://github.com/Probely/probely-orb
executors:
  alpine:
    docker:
    - environment:
        TERM: dumb
      image: cibuilds/base:latest
    resource_class: small
jobs:
  Scan:
    description: Start a scan on a target (website) using Probely.
    executor: alpine
    parameters:
      api_key:
        default: PROBELY_API_KEY
        description: |
          The Probely API key to use, defined in the PROBELY_API_KEY environment variable.
        type: env_var_name
      target_id:
        description: The id of the target (website) to scan.
        type: string
      user_data:
        description: Choose user_data to mark your scan.
        type: string
    steps:
    - scan:
        target_id: << parameters.target_id >>
        user_data: << parameters.user_data >>
  Vulnerabilities:
    description: Get scan vulnerabilities.
    executor: alpine
    parameters:
      api_key:
        default: PROBELY_API_KEY
        description: |
          The Probely API key to use, defined in the PROBELY_API_KEY environment variable.
        type: env_var_name
      target_id:
        description: The id of the target (website) to scan.
        type: string
      user_data:
        description: The user_data of the scan that you chose previously.
        type: string
    steps:
    - vulnerabilities:
        target_id: << parameters.target_id >>
        user_data: << parameters.user_data >>

workflows:
  version: 2
  scan-and-vulnerabilities:
    jobs:
      - Scan:
          target_id: 36oFYYRFkkuR
          user_data: some_test
          filters:
            branches:
              ignore: master        
      - Vulnerabilities:
          target_id: 36oFYYRFkkuR
          user_data: some_test
          filters:
            branches:
              only: master